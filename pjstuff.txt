timesheet.ksionda.me (WIP name)

-Design

What is the first valuable thing you're trying to get out of this?
    -Information easily viewable/manageable
        -Projects
            -Team/individual
        -Time management
        -Employee Information
        -Daily overview (sourceable from existing data?)
        -Variable leading metric (time, progress/commits, story points) (correlated with lagging metric)
            -Time spent
            -Lines of code
            -Commits
            -Features
            -Functionality
        -Lagging metrics (unambiguous success)
        -Scoreboard
        -Accountable to the scoreboard
Can more than one project be "clocked-in" at the same time for one user?
    -Multiple projects can be worked on in a day/paramaters (scope(?), goals/milestone, issues)

Misc:
    -The hill (concept from Shape-Up)
        -Shaping vs building
    -Possible Slack integration
    Decide what database needs to know
	    -What is given to user logging in from another computer
        -Multiple teams - many-to-many relationship
        -Multiple organizations/projects

Example:

Project: timesheet project
    High-level overview
        Paper-prototype

-Data sources (what state are we tracking?)
    -What data am I feeding from the frontend

-API:
    - user (uuid) (indexing various data)
        - some means of logging in
        - some means of contact
        - cutting scope: "login" is just timesheet.ksionda.me/<uuid>/
    - projects
        - github connection information
    - leading metric count (???)
        - want some built-in stuff?
    - KEEP IN MIND
        - teams
        - organization
        - separating github from projects maybe in future if bad to couple them
        - user
            - name
            - other metadata that we don't have to worry about


Examples to look at:
    https://basecamp.com/
    Clockify
    Dovico 

Graph libraries:
    -Chart.js
    -D3.js
    -Plotly
    -mpld3

API Stuff:
    - GraphQL or normal REST/CRUD practices
    - Token stuff for authentication
        - JWT basic/bearer

Scaffolding everything from FE:
    - https://miragejs.com/
    - https://miragejs.com/docs/advanced/graphql/